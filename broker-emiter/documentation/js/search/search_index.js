var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.812,1,1.2]],["body/modules/AppModule.html",[0,1.196,1,2.071,2,0.92,3,0.92,4,1.365,5,1.365,6,0.92,7,1.365,8,1.365,9,1.696,10,1.696,11,1.705,12,0.073,13,1.886,14,1.365,15,1.365,16,0.756,17,0.756,18,0.615,19,2.199,20,3.039,21,1.196,22,0.92,23,1.365,24,0.92,25,2.199,26,2.199,27,1.696,28,2.199,29,0.756,30,0.382,31,0.049,32,0.049]],["title/classes/EmailDto.html",[30,0.41,33,0.988]],["body/classes/EmailDto.html",[12,0.074,16,0.679,17,0.679,18,0.552,21,0.679,29,0.679,30,0.343,31,0.046,32,0.046,33,1.179,34,1.227,35,1.524,36,0.679,37,1.179,38,2.039,39,2.039,40,3.286,41,2.039,42,1.82,43,2.819,44,1.375,45,2.444,46,2.039,47,3.126,48,1.976,49,1.976,50,1.004,51,1.976,52,1.976,53,1.524]],["title/controllers/RabbitMQController.html",[54,0.988,55,1.2]],["body/controllers/RabbitMQController.html",[12,0.075,16,0.504,17,0.504,18,0.41,21,1.149,22,0.614,23,0.911,24,0.946,29,0.504,30,0.255,31,0.037,32,0.037,33,1.296,36,0.504,38,2.192,39,1.403,42,0.746,44,0.614,46,0.911,50,0.746,54,0.614,55,1.149,56,1.133,57,1.149,58,1.133,59,1.468,60,1.133,61,1.744,62,2.127,63,1.744,64,1.133,65,2.261,66,1.468,67,1.133,68,1.133,69,1.133,70,1.133,71,1.133,72,1.468,73,1.468,74,0.947,75,1.133,76,1.133,77,1.149,78,1.468,79,1.468,80,1.468,81,1.468,82,1.468,83,1.468,84,1.468,85,1.468,86,1.468,87,1.468,88,2.757,89,1.133,90,1.468,91,1.133,92,1.468,93,2.261,94,1.468,95,2.261,96,2.261,97,1.133,98,2.261,99,2.261,100,1.468,101,1.744,102,1.468,103,1.744,104,1.133]],["title/modules/RabbitMQModule.html",[0,0.812,11,0.988]],["body/modules/RabbitMQModule.html",[0,1.184,2,0.902,3,0.902,4,1.338,5,1.338,6,0.902,7,2.138,8,1.338,11,1.694,12,0.072,13,1.86,14,1.338,15,1.338,16,0.741,17,0.741,18,0.603,21,1.184,22,0.902,23,1.86,24,0.902,29,0.741,30,0.374,31,0.049,32,0.049,55,1.751,56,2.312,57,1.096,74,1.391,75,1.663,105,1.663,106,1.663,107,2.156,108,2.156]],["title/injectables/RabbitMQService.html",[74,0.812,109,1.2]],["body/injectables/RabbitMQService.html",[12,0.073,16,0.521,17,0.521,18,0.423,21,0.966,22,0.634,24,1.419,29,0.521,30,0.263,31,0.038,32,0.038,33,1.317,36,0.521,37,0.969,38,1.438,41,1.745,42,1.6,44,1.176,45,1.438,57,1.724,61,1.787,62,2.169,63,1.787,64,1.787,67,1.169,68,1.169,69,1.169,70,1.169,71,1.169,74,0.796,76,1.169,91,1.169,101,1.169,109,1.177,110,1.515,111,1.169,112,3.577,113,2.812,114,2.812,115,2.316,116,1.515,117,2.812,118,1.515,119,1.515,120,1.515,121,2.316,122,1.515,123,2.316,124,1.169,125,2.316,126,1.515,127,1.515,128,1.515,129,1.515,130,1.169,131,1.515,132,1.515,133,1.515,134,1.515,135,1.515,136,1.515]],["title/classes/ResponseDto.html",[30,0.41,77,1.2]],["body/classes/ResponseDto.html",[12,0.075,16,0.627,17,0.627,18,0.51,21,0.627,29,0.627,30,0.317,31,0.043,32,0.043,34,1.132,36,0.627,37,1.113,39,1.949,41,1.949,42,1.865,44,1.444,45,1.651,46,2.143,47,3.19,50,0.927,53,1.407,77,1.352,97,2.052,103,2.422,104,1.407,137,1.407,138,3.141,139,3.141,140,2.661,141,1.824,142,1.824,143,2.661,144,1.824,145,1.824,146,1.824,147,1.824]],["title/coverage.html",[148,2.461]],["body/coverage.html",[6,1.014,12,0.07,18,0.678,24,1.358,30,0.564,31,0.053,32,0.053,33,1.014,35,1.87,44,1.014,54,1.014,55,1.232,57,1.65,58,1.87,74,0.833,77,1.232,89,1.87,109,1.232,111,1.87,137,1.87,148,1.87,149,2.425,150,2.425,151,2.425,152,4.077,153,3.247,154,2.425,155,1.87,156,2.425,157,2.425,158,2.425,159,2.425,160,2.425]],["title/dependencies.html",[3,1.185,161,1.534]],["body/dependencies.html",[3,1.053,12,0.075,22,1.053,27,1.941,31,0.054,32,0.054,50,1.279,124,1.941,130,1.941,162,3.969,163,2.517,164,2.517,165,2.517,166,2.517,167,2.517,168,2.517,169,2.517,170,2.517,171,2.517,172,2.517,173,2.517,174,2.517,175,2.517,176,2.517,177,2.517,178,2.517,179,2.517]],["title/miscellaneous/functions.html",[180,1.534,181,2.184]],["body/miscellaneous/functions.html",[6,1.758,12,0.064,31,0.064,32,0.064,36,1.12,155,2.514,180,2.514,181,2.514,182,3.259]],["title/index.html",[36,0.683,183,1.989,184,1.989]],["body/index.html",[0,0.951,12,0.071,31,0.058,32,0.058,54,1.158,60,2.136,185,2.769,186,2.769,187,2.769,188,2.769,189,2.769,190,2.769,191,2.769,192,2.769,193,2.769,194,2.769,195,2.769,196,2.769,197,3.542,198,3.542,199,2.769,200,2.769,201,2.769]],["title/modules.html",[2,1.335]],["body/modules.html",[1,1.609,2,1.324,11,1.324,12,0.063,31,0.063,32,0.063,202,3.851,203,3.851,204,3.851,205,3.851]],["title/overview.html",[206,2.461]],["body/overview.html",[0,0.865,1,2.017,2,1.053,3,1.053,4,1.562,5,1.562,6,1.053,7,1.562,8,1.562,9,1.941,10,1.941,11,1.727,12,0.065,13,2.066,14,1.562,15,1.562,31,0.054,32,0.054,34,1.562,54,1.053,74,1.281,105,1.941,106,1.941,109,1.279,206,1.941,207,3.329,208,3.329]],["title/properties.html",[37,1.185,161,1.534]],["body/properties.html",[12,0.073,31,0.063,32,0.063,37,1.324,209,3.166,210,3.166,211,3.166,212,3.166,213,3.166,214,3.166]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":210,"title":{},"body":{"properties.html":{}}}],["0.10.4",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":208,"title":{},"body":{"overview.html":{}}}],["10.4.4",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":207,"title":{},"body":{"overview.html":{}}}],["3.2.3",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["5672",{"_index":132,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["6.0.1",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["7.4.2",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["amqp",{"_index":130,"title":{},"body":{"injectables/RabbitMQService.html":{},"dependencies.html":{}}}],["amqplib",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["apiextramodels",{"_index":79,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["apiextramodels(responsedto",{"_index":81,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["apiproperty",{"_index":47,"title":{},"body":{"classes/EmailDto.html":{},"classes/ResponseDto.html":{}}}],["apitags",{"_index":80,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["apitags('broker",{"_index":82,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["application",{"_index":187,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":62,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["author",{"_index":214,"title":{},"body":{"properties.html":{}}}],["await",{"_index":91,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["body",{"_index":72,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"classes/ResponseDto.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["broker",{"_index":60,"title":{},"body":{"controllers/RabbitMQController.html":{},"index.html":{}}}],["browse",{"_index":205,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":202,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":102,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["class",{"_index":30,"title":{"classes/EmailDto.html":{},"classes/ResponseDto.html":{}},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["classes",{"_index":34,"title":{},"body":{"classes/EmailDto.html":{},"classes/ResponseDto.html":{},"overview.html":{}}}],["client",{"_index":113,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["clientproxy",{"_index":117,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["clientproxyfactory",{"_index":122,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["clientproxyfactory.create",{"_index":126,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_rabbitmqmodule",{"_index":105,"title":{},"body":{"modules/RabbitMQModule.html":{},"overview.html":{}}}],["cluster_rabbitmqmodule_providers",{"_index":106,"title":{},"body":{"modules/RabbitMQModule.html":{},"overview.html":{}}}],["configmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":188,"title":{},"body":{"index.html":{}}}],["connection",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":87,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"classes/EmailDto.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["controller",{"_index":54,"title":{"controllers/RabbitMQController.html":{}},"body":{"controllers/RabbitMQController.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["controller('broker",{"_index":83,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["controllers",{"_index":56,"title":{},"body":{"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{}}}],["coverage",{"_index":148,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":138,"title":{},"body":{"classes/ResponseDto.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["decorators",{"_index":46,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{}}}],["default",{"_index":119,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["delivered",{"_index":99,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["dependecies",{"_index":196,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":211,"title":{},"body":{"properties.html":{}}}],["documentation",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["email",{"_index":38,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["emaildto",{"_index":33,"title":{"classes/EmailDto.html":{}},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{},"coverage.html":{}}}],["emit('mail_queue",{"_index":135,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["emiter",{"_index":185,"title":{},"body":{"index.html":{}}}],["error",{"_index":103,"title":{},"body":{"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{}}}],["example",{"_index":197,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["express",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":104,"title":{},"body":{"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["function",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":181,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":183,"title":{"index.html":{}},"body":{}}],["identifier",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["injectable",{"_index":109,"title":{"injectables/RabbitMQService.html":{}},"body":{"injectables/RabbitMQService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":110,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["install",{"_index":195,"title":{},"body":{"index.html":{}}}],["installdebug",{"_index":199,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["license",{"_index":212,"title":{},"body":{"properties.html":{}}}],["mail",{"_index":134,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["manager",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":39,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{}}}],["messages",{"_index":192,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":61,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["miscellaneous",{"_index":180,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"modules.html":{},"overview.html":{}}}],["mq.controller",{"_index":108,"title":{},"body":{"modules/RabbitMQModule.html":{}}}],["mq.controller.ts",{"_index":58,"title":{},"body":{"controllers/RabbitMQController.html":{},"coverage.html":{}}}],["mq.controller.ts:15",{"_index":66,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["mq.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["mq.module.ts",{"_index":107,"title":{},"body":{"modules/RabbitMQModule.html":{}}}],["mq.service",{"_index":75,"title":{},"body":{"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{}}}],["mq.service.ts",{"_index":111,"title":{},"body":{"injectables/RabbitMQService.html":{},"coverage.html":{}}}],["mq.service.ts:11",{"_index":118,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["mq.service.ts:13",{"_index":115,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["mq.service.ts:25",{"_index":116,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["mq/rabbit",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"coverage.html":{}}}],["name",{"_index":68,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["nestjs",{"_index":186,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":124,"title":{},"body":{"injectables/RabbitMQService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":50,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{},"dependencies.html":{}}}],["new",{"_index":89,"title":{},"body":{"controllers/RabbitMQController.html":{},"coverage.html":{}}}],["npm",{"_index":198,"title":{},"body":{"index.html":{}}}],["null",{"_index":97,"title":{},"body":{"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{}}}],["optional",{"_index":69,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["options",{"_index":128,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["overview",{"_index":206,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":161,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":67,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["post",{"_index":73,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["post('send",{"_index":65,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["prefix",{"_index":59,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["private",{"_index":112,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["process.env.rabbit_server",{"_index":121,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"classes/EmailDto.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["queue",{"_index":133,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["rabbit",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{}}}],["rabbitmq",{"_index":194,"title":{},"body":{"index.html":{}}}],["rabbitmqcontroller",{"_index":55,"title":{"controllers/RabbitMQController.html":{}},"body":{"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"coverage.html":{}}}],["rabbitmqmodule",{"_index":11,"title":{"modules/RabbitMQModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"modules.html":{},"overview.html":{}}}],["rabbitmqservice",{"_index":74,"title":{"injectables/RabbitMQService.html":{}},"body":{"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"coverage.html":{},"overview.html":{}}}],["rabbitserver",{"_index":114,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["readonly",{"_index":85,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["reflect",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}],["response",{"_index":88,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["response.data",{"_index":95,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["response.error",{"_index":96,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["response.message",{"_index":98,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["response.success",{"_index":93,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["responsedto",{"_index":77,"title":{"classes/ResponseDto.html":{}},"body":{"controllers/RabbitMQController.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":101,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["returns",{"_index":70,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["rimraf",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":200,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":191,"title":{},"body":{"index.html":{}}}],["sendemail",{"_index":63,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["sendemail(@body",{"_index":86,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["sendemail(email",{"_index":64,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["service",{"_index":190,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["src/.../main.ts",{"_index":182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/dto/email.dto",{"_index":76,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["src/dto/email.dto.ts",{"_index":35,"title":{},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["src/dto/email.dto.ts:11",{"_index":43,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/dto/email.dto.ts:5",{"_index":48,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/dto/email.dto.ts:8",{"_index":49,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/dto/response.dto",{"_index":78,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["src/dto/response.dto.ts",{"_index":137,"title":{},"body":{"classes/ResponseDto.html":{},"coverage.html":{}}}],["src/dto/response.dto.ts:11",{"_index":142,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/dto/response.dto.ts:14",{"_index":140,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/dto/response.dto.ts:5",{"_index":144,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/dto/response.dto.ts:8",{"_index":141,"title":{},"body":{"classes/ResponseDto.html":{}}}],["src/main.ts",{"_index":155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/rabbit",{"_index":57,"title":{},"body":{"controllers/RabbitMQController.html":{},"modules/RabbitMQModule.html":{},"injectables/RabbitMQService.html":{},"coverage.html":{}}}],["start:dev",{"_index":201,"title":{},"body":{"index.html":{}}}],["started",{"_index":184,"title":{"index.html":{}},"body":{}}],["statements",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/EmailDto.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{}}}],["subject",{"_index":40,"title":{},"body":{"classes/EmailDto.html":{}}}],["success",{"_index":139,"title":{},"body":{"classes/ResponseDto.html":{}}}],["successfuly",{"_index":100,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["support",{"_index":203,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":204,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":189,"title":{},"body":{"index.html":{}}}],["table",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["this.client",{"_index":125,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["this.data",{"_index":146,"title":{},"body":{"classes/ResponseDto.html":{}}}],["this.email",{"_index":51,"title":{},"body":{"classes/EmailDto.html":{}}}],["this.error",{"_index":147,"title":{},"body":{"classes/ResponseDto.html":{}}}],["this.message",{"_index":53,"title":{},"body":{"classes/EmailDto.html":{},"classes/ResponseDto.html":{}}}],["this.rabbitmqservice.sendemail(email",{"_index":92,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["this.rabbitserver",{"_index":131,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["this.subject",{"_index":52,"title":{},"body":{"classes/EmailDto.html":{}}}],["this.success",{"_index":145,"title":{},"body":{"classes/ResponseDto.html":{}}}],["through",{"_index":193,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":136,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["transport",{"_index":123,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["transport.rmq",{"_index":127,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["true",{"_index":94,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["try",{"_index":90,"title":{},"body":{"controllers/RabbitMQController.html":{}}}],["type",{"_index":44,"title":{},"body":{"classes/EmailDto.html":{},"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{},"classes/ResponseDto.html":{},"coverage.html":{}}}],["unknown",{"_index":71,"title":{},"body":{"controllers/RabbitMQController.html":{},"injectables/RabbitMQService.html":{}}}],["unlicensed",{"_index":213,"title":{},"body":{"properties.html":{}}}],["urls",{"_index":129,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["value",{"_index":120,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["version",{"_index":209,"title":{},"body":{"properties.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/RabbitMQModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nRabbitMQModule\n\nRabbitMQModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRabbitMQModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RabbitMQModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RabbitMQModule } from './rabbit-mq/rabbit-mq.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    RabbitMQModule\n  ],    \n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dto/email.dto.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/email.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/email.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/email.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class EmailDto {\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    subject: string;\n    \n    @ApiProperty()\n    message: string;\n\n    constructor() {\n        this.email = '';\n        this.subject = '';\n        this.message = '';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RabbitMQController.html":{"url":"controllers/RabbitMQController.html","title":"controller - RabbitMQController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RabbitMQController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rabbit-mq/rabbit-mq.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                broker\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(email: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email')\n                \n            \n\n                    \n                        \n                            Defined in src/rabbit-mq/rabbit-mq.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { RabbitMQService } from './rabbit-mq.service';\nimport { EmailDto } from 'src/dto/email.dto';\nimport { ResponseDto } from 'src/dto/response.dto';\nimport { ApiExtraModels, ApiTags } from '@nestjs/swagger';\n\n@ApiExtraModels(ResponseDto)\n@ApiTags('Broker')\n@Controller('broker')\nexport class RabbitMQController {\n\n    constructor(private readonly rabbitMQService: RabbitMQService) {}\n\n    @Post('send-email')\n    async sendEmail(@Body() email: EmailDto) {\n      const response = new ResponseDto();\n      try {\n        await this.rabbitMQService.sendEmail(email);\n\n        response.success = true;\n        response.data = email;\n        response.error = null;\n        response.message = 'message was delivered successfuly';        \n\n        return response;\n\n      } catch (error) {\n        \n        response.success = false;\n        response.data = email;\n        response.error = error;\n        response.message = 'message was not delivered';\n\n        return response;\n\n      }\n    }    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RabbitMQModule.html":{"url":"modules/RabbitMQModule.html","title":"module - RabbitMQModule","body":"\n                   \n\n\n\n\n    Modules\n    RabbitMQModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RabbitMQModule\n\n\n\ncluster_RabbitMQModule_providers\n\n\n\n\nRabbitMQService\n\nRabbitMQService\n\n\n\nRabbitMQModule\n\nRabbitMQModule\n\nRabbitMQModule -->\n\nRabbitMQService->RabbitMQModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rabbit-mq/rabbit-mq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitMQService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RabbitMQController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RabbitMQService } from './rabbit-mq.service';\nimport { RabbitMQController } from './rabbit-mq.controller';\n\n@Module({\n  providers: [RabbitMQService],\n  controllers: [RabbitMQController]\n})\nexport class RabbitMQModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitMQService.html":{"url":"injectables/RabbitMQService.html","title":"injectable - RabbitMQService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitMQService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rabbit-mq/rabbit-mq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                rabbitServer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/rabbit-mq/rabbit-mq.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(email: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rabbit-mq/rabbit-mq.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ClientProxy\n\n                    \n                \n                    \n                        \n                                Defined in src/rabbit-mq/rabbit-mq.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rabbitServer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : process.env.RABBIT_SERVER\n                    \n                \n                    \n                        \n                                Defined in src/rabbit-mq/rabbit-mq.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  ClientProxy,\n  ClientProxyFactory,\n  Transport,\n} from '@nestjs/microservices';\nimport { EmailDto } from 'src/dto/email.dto';\n\n@Injectable()\nexport class RabbitMQService {\n  private client: ClientProxy;\n\n  private rabbitServer: string = process.env.RABBIT_SERVER;\n\n  constructor() {\n    this.client = ClientProxyFactory.create({\n      transport: Transport.RMQ,\n      options: {\n        urls: ['amqp://'+ this.rabbitServer +':5672'],\n        queue: 'mail'\n      },\n    });\n  }\n\n  async sendEmail(email: EmailDto) {\n    return await this.client\n      .emit('mail_queue', email)\n      .toPromise();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseDto.html":{"url":"classes/ResponseDto.html","title":"class - ResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                error\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dto/response.dto.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class ResponseDto {\n    @ApiProperty()\n    success: boolean;\n\n    @ApiProperty()\n    data: any | any[];\n\n    @ApiProperty()\n    error: any;\n    \n    @ApiProperty()\n    message: string;\n\n    constructor() {\n        this.success = false;\n        this.data = null;\n        this.error = null;\n        this.message = '';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/dto/email.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/response.dto.ts\n            \n            class\n            ResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rabbit-mq/rabbit-mq.controller.ts\n            \n            controller\n            RabbitMQController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/rabbit-mq/rabbit-mq.service.ts\n            \n            injectable\n            RabbitMQService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.4.4\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.4.4\n        \n            @nestjs/microservices : ^10.4.4\n        \n            @nestjs/platform-express : ^10.4.4\n        \n            @nestjs/swagger : ^7.4.2\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.4\n        \n            reflect-metadata : ^0.2.2\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBroker Emiter\nNestJs application configured with swagger and a module with controller and service to send messages through RabbitMQ.\nInstall Dependecies\nExample :  > npm installDebug\nExample :  > npm run start:dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RabbitMQModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_RabbitMQModule\n\n\n\ncluster_RabbitMQModule_providers\n\n\n\n\nRabbitMQModule\n\nRabbitMQModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRabbitMQModule->AppModule\n\n\n\n\n\nRabbitMQService\n\nRabbitMQService\n\nRabbitMQModule -->\n\nRabbitMQService->RabbitMQModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
